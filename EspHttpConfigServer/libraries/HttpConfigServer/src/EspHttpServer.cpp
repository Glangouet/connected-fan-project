/*
 * HttpConfigServer.cpp
 *
 *  Created on: 16 sept. 2017
 *      Author: Deejc
 */

#include <EspHttpServer.h>

constexpr char EspHttpServer::URL_BASE[];

ESP8266WebServer* EspHttpServer::server;

void EspHttpServer::setup(ESP8266WebServer* server) {
#ifdef SERIAL_DEBUG
		Serial.begin(115200);
		delay(50);
		Serial.println(F("\n"));
#endif
	this->server = server;
	this->aconfs.setup(server);
	this->agpios.setup(server);
	this->acmds.setup(server);
	this->ads.setup(server);
	server->on(URL_BASE, displayHtml);
	server->begin();
}

void EspHttpServer::loop() {
	this->server->handleClient();
	this->agpios.loop();
	this->acmds.loop();
	this->ads.loop();
}

void EspHttpServer::displayHtml() {
	server->send(200, F("text/html"),
			F("<!doctype html><html lang='fr'><head><meta charset='utf-8'><title>Super ventilateur connecté</title><style>h1, h2, h3{text-align: center;}.btn-block{display: block;width: 100%;}.btn-success{color: #fff;background-color: #28a745;border-color: #28a745;}.btn{display: inline-block;font-weight: 400;text-align: center;white-space: nowrap;vertical-align: middle;-webkit-user-select: none;-moz-user-select: none;-ms-user-select: none;user-select: none;border: 1px solid transparent;padding: .375rem .75rem;font-size: 1rem;line-height: 1.5;border-radius: .25rem;transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;}button, select{text-transform: none;}button, input{overflow: visible;}button, input, optgroup, select, textarea{margin: 0;font-family: inherit;font-size: inherit;line-height: inherit;}button{border-radius: 0;}.btn:not(:disabled):not(.disabled){cursor: pointer;}.btn-block{display: block;width: 100%;}.btn-success{color: #fff;background-color: #28a745;border-color: #28a745;}.btn-primary{color: #fff;background-color: #007bff;border-color: #007bff;}.btn-danger{color: #fff;background-color: #dc3545;border-color: #dc3545;}hr{margin-top: 1rem;margin-bottom: 1rem;border: 0;border-top: 1px solid rgba(0,0,0,.1);}hr{box-sizing: content-box;height: 0;overflow: visible;}.container{width: 80%;margin: 0 auto;}.container-col{width: 33%;display: inline-block;vertical-align: top;min-height: 600px;}.block{margin: 10px;padding: 10px;background-color: aliceblue;}.text-center{text-align: center;}</style></head><body><div class='container'><hr/><h1 class='text-center'>Sublime ventilateur connecté</h1><hr/><div class='container-col'><div class='block'><h1>Ventilateur</h1><hr/><h1 id='textCurrentStatus' class='text-center text-current-status'>ON / OFF</h1><button id='buttonActivateProgram' class='activate-program btn btn-block btn-primary'>Activer le ventilateur</button><br/><br/><button id='buttonDeactivateProgram' class='deactivate-program btn btn-block btn-danger'>Désactiver le ventilateur</button></div></div><div class='container-col'><div class='block'><h2>Température</h2><table width='100%'><thead><tr><th class='text-center'>Température actuelle</th><th class='text-center'>Humidité de l'air</th></tr></thead><tbody><tr><td id='textCurrentTemperature' class='text-center text-current-temperature'></td><td id='textCurrentHumidity' class='text-center text-current-humidity'></td></tr></tbody></table><hr /><input id='inputUpdateTemperature' class='input-temperature' type='number' value='100'>°<hr /><button id='buttonUpdateTemperature' type='submit' class='btn btn-success btn-block change-temperature'>Changer la température minimum</button><hr /><h4>Declanchement minimum</h4><p id='textMinimumTemperature' class='text-center text-minimum-temperature'>0</p></div></div><div class='container-col'><div class='block'><h2>Ultrasson</h2><hr /><h2 id='textCurrentDistance' class='text-current-distance'>0</h2><hr /><input id='inputUpdateDistance' class='input-distance' type='number' value='100'>cm<hr /><button id='buttonUpdateDistance' type='submit' class='btn btn-success btn-block change-distance'>Changer la distance minimum</button><hr /><h4>Declanchement minimum</h4><p id='textMinimumDistance' class='text-center text-minimum-distance'>0</p></div></div></div><script type='text/javascript' >var URL_API='http://localhost:8888/api';var URL_UPDATE_DISTANCE=URL_API+'/distance/update/';var URL_UPDATE_TEMPERATURE=URL_API+'/temperature/update/';var URL_ACTIVATE_PROGRAM=URL_API+'/status/activate';var URL_DEACTIVATE_PROGRAM=URL_API+'/status/deactivate';var URL_GET_CURRENT_DISTANCE=URL_API+'/distance/get-current';var URL_GET_CURRENT_TEMPERATURE=URL_API+'/temperature/get-current';var URL_GET_CURRENT_HUMIDITY=URL_API+'/humidity/get-current';var URL_GET_MINIMUM_DISTANCE=URL_API+'/distance/get-minimum';var URL_GET_MINIMUM_TEMPERATURE=URL_API+'/temperature/get-minimum';var URL_GET_STATUS_PROGRAM=URL_API+'/status/get';var INPUT_UPDATE_TEMPERATURE=document.getElementById('inputUpdateTemperature');var INPUT_UPDATE_DISTANCE=document.getElementById('inputUpdateDistance');var BUTTON_UPDATE_TEMPERATURE=document.getElementById('buttonUpdateTemperature');var BUTTON_UPDATE_DISTANCE=document.getElementById('buttonUpdateDistance');var BUTTON_ACTIVATE_PROGRAM=document.getElementById('buttonActivateProgram');var BUTTON_DEACTIVATE_PROGRAM=document.getElementById('buttonDeactivateProgram');var TEXT_CURRENT_TEMPERATURE=document.getElementById('textCurrentTemperature');var TEXT_CURRENT_DISTANCE=document.getElementById('textCurrentDistance');var TEXT_CURRENT_STATUS=document.getElementById('textCurrentStatus');var TEXT_CURRENT_HUMIDITY=document.getElementById('textCurrentHumidity');var TEXT_MINIMUM_TEMPERATURE=document.getElementById('textMinimumTemperature');var TEXT_MINIMUM_DISTANCE=document.getElementById('textMinimumDistance');window.addEventListener('load', function(){BUTTON_ACTIVATE_PROGRAM.addEventListener('click', function(){console.log('ACTIVATE');activateProgram();});BUTTON_DEACTIVATE_PROGRAM.addEventListener('click', function(){console.log('DEACTIVATE');deactivateProgram();});BUTTON_UPDATE_DISTANCE.addEventListener('click', function(){console.log('UPDATE DISTANCE');updateDistance(INPUT_UPDATE_DISTANCE.value);});BUTTON_UPDATE_TEMPERATURE.addEventListener('click', function(){console.log('UPDATE TEMPERATURE');updateDistance(INPUT_UPDATE_TEMPERATURE.value);});getStatusProgram();getMinimumTemperature();getMinimumDistance();getCurrentDistance();getCurrentHumidity();getCurrentTemperature();}, false);function xhrRequest(method, url, asc, data, succ, err){var req=new XMLHttpRequest();req.open(method, url, asc);req.setRequestHeader('Content-Type', 'application/json');req.send(data);if(req.addEventListener('load', function(event){console.log(event);if(req.status===200){succ(req);console.log('Réponse reçue: %s', req.responseText);}else{err(req.status);console.log('Status de la réponse: %d(%s)', req.status, req.statusText);}}));}function activateProgram(){xhrRequest('GET', URL_ACTIVATE_PROGRAM, true, null, function(succ){TEXT_CURRENT_STATUS.innerText='WORKING';}, function(err){TEXT_CURRENT_STATUS.innerText='ERROR';console.log(err);});}function deactivateProgram(){xhrRequest('GET', URL_DEACTIVATE_PROGRAM, true, null, function(succ){TEXT_CURRENT_STATUS.innerText='NOT WORKING';}, function(err){TEXT_CURRENT_STATUS.innerText='ERROR';console.log(err);});}function updateDistance(distance){var data={data: distance};xhrRequest('POST', URL_UPDATE_DISTANCE, true, data, function(succ){TEXT_CURRENT_DISTANCE.innerText=succ.target.responseText;}, function(err){TEXT_CURRENT_DISTANCE.innerText='ERROR';console.log(err);});}function updateTemperature(temperature){var data={data: temperature};xhrRequest('POST', URL_UPDATE_TEMPERATURE, true, data, function(succ){TEXT_CURRENT_TEMPERATURE.innerText=succ.target.responseText;}, function(err){TEXT_CURRENT_TEMPERATURE.innerText='ERROR';console.log(err);});}function getCurrentTemperature(){xhrRequest('GET', URL_GET_CURRENT_TEMPERATURE, true, null, function(succ){TEXT_CURRENT_TEMPERATURE.innerText=succ.target.responseText;}, function(err){TEXT_CURRENT_TEMPERATURE.innerText='ERROR';console.log(err);});}function getCurrentDistance(){xhrRequest('GET', URL_GET_CURRENT_DISTANCE, true, null, function(succ){TEXT_CURRENT_DISTANCE.innerText=succ.target.responseText;}, function(err){TEXT_CURRENT_DISTANCE.innerText='ERROR';console.log(err);});}function getMinimumTemperature(){xhrRequest('GET', URL_GET_MINIMUM_TEMPERATURE, true, null, function(succ){TEXT_MINIMUM_TEMPERATURE.innerText=succ.target.responseText;}, function(err){TEXT_MINIMUM_TEMPERATURE.innerText='ERROR';console.log(err);});}function getMinimumDistance(){xhrRequest('GET', URL_GET_MINIMUM_DISTANCE, true, null, function(succ){TEXT_MINIMUM_DISTANCE.innerText=succ.target.responseText;}, function(err){TEXT_MINIMUM_DISTANCE.innerText='ERROR';console.log(err);});}function getStatusProgram(){xhrRequest('GET', URL_GET_STATUS_PROGRAM, true, null, function(succ){TEXT_CURRENT_STATUS.innerText=succ.target.responseText;}, function(err){TEXT_CURRENT_STATUS.innerText='ERROR';console.log(err);});}function getCurrentHumidity(){xhrRequest('GET', URL_GET_CURRENT_HUMIDITY, true, null, function(succ){TEXT_CURRENT_HUMIDITY.innerText=succ.target.responseText;}, function(err){TEXT_CURRENT_HUMIDITY.innerText='ERROR';console.log(err);});}</script></body></html>"));
}
